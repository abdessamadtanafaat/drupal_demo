<?php

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_preprocess_HOOK() for page templates.
 */
function weather_preprocess_page(array &$variables) {
  // Get the path.matcher service to check if it's the front page.
  $is_front = \Drupal::service('path.matcher')->isFrontPage();

  // Add it to the variables array,
  // making it available in Twig templates.
  $variables['is_front'] = $is_front;
}

/**
 * Implements hook_page_attachments_alter().
 *
 * This function will add a meta viewport tag to the head section of every page.
 */
function anytown_page_attachments_alter(array &$attachments) {

  // add the meta tag for viewport using a render array
  $attachments['#attached']['html_head'][] = [
    [
      '#tag' => 'meta',
      '#attributes' => [
        'name' => 'viewport',
        'content' => 'width=device-width, initial-scale=1, shrink-to-fit=no',
      ],
  ],
    'viewport_meta_tag', // Unique key to identify the meta tag
  ];
}

/**
 * Implements hook_preprocess_menu().
 */
function anytown_module_preprocess_menu(array &$variables) {
  // Check if the current menu exists.
  if (isset($variables['elements'])) {
    // Loop through each menu item and add the custom class.
    foreach ($variables['elements'] as &$item) {
      // Add 'my-custom-class' to the menu item's classes.
      if (isset($item['#attributes']['class'])) {
        $item['#attributes']['class'][] = 'my-custom-class';
      } else {
        // If no class exists, create the class array.
        $item['#attributes']['class'] = ['my-custom-class'];
      }
    }
  }
}

/**
 * Implements hook_preprocess_block() to alter the system_branding_block.
 */
function anytown_module_preprocess_block(array &$variables) {
  // Check if the current block is the system branding block.
  if ($variables['plugin_id'] == 'system_branding_block') {
    // add the custom logo URL.
    $variables['content']['#logo']['#uri'] = 'https://static.cdnlogo.com/logos/d/88/drupal-wordmark.svg';
  }
}


use Drupal\Core\Form\FormStateInterface;

/**
 * Custom validation handler for the user registration form.
 */
function anytown_user_register_validate(&$form, FormStateInterface $form_state)
{
  if ($form_state->getValue('name') === 'anytown') {
    $form_state->setErrorByName('name', t('The username "anytown" is invalid. Please choose a different name.'));
  }
}



